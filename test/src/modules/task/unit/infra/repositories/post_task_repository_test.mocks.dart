// Mocks generated by Mockito 5.4.4 from annotations
// in project_list_fliutter/test/src/modules/task/unit/infra/repositories/post_task_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i7;

import 'package:mockito/mockito.dart' as _i1;
import 'package:project_list_fliutter/src/modules/task/domain/errors/error_datasource.dart'
    as _i5;
import 'package:project_list_fliutter/src/modules/task/infra/comm_packages/proto/pb/tasks.pb.dart'
    as _i6;
import 'package:project_list_fliutter/src/modules/task/infra/datasources/save_task_datasource.dart'
    as _i2;
import 'package:project_list_fliutter/src/modules/task/infra/repositories/post_task_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeISaveTaskDatasource_0 extends _i1.SmartFake
    implements _i2.ISaveTaskDatasource {
  _FakeISaveTaskDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PostTaskRepositoryImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockPostTaskRepositoryImpl extends _i1.Mock
    implements _i3.PostTaskRepositoryImpl {
  MockPostTaskRepositoryImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ISaveTaskDatasource get datasource => (super.noSuchMethod(
        Invocation.getter(#datasource),
        returnValue: _FakeISaveTaskDatasource_0(
          this,
          Invocation.getter(#datasource),
        ),
      ) as _i2.ISaveTaskDatasource);

  @override
  _i4.Future<(bool?, _i5.CreateTaskError?)> addTask(
    _i6.Task? task,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [
            task,
            userId,
          ],
        ),
        returnValue:
            _i4.Future<(bool?, _i5.CreateTaskError?)>.value((null, null)),
      ) as _i4.Future<(bool?, _i5.CreateTaskError?)>);
}

/// A class which mocks [ISaveTaskDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockISaveTaskDatasource extends _i1.Mock
    implements _i2.ISaveTaskDatasource {
  MockISaveTaskDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<(bool?, _i5.CreateTaskError?)> saveTask(_i7.Uint8List? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #saveTask,
          [task],
        ),
        returnValue:
            _i4.Future<(bool?, _i5.CreateTaskError?)>.value((null, null)),
      ) as _i4.Future<(bool?, _i5.CreateTaskError?)>);
}
